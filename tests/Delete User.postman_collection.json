{
	"info": {
		"_postman_id": "b6143ff1-9e0f-4883-ab41-9b38f7846845",
		"name": "Delete User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44131548"
	},
	"item": [
		{
			"name": "Create Test User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Test\",\r\n    \"lastname\": \"User\",\r\n    \"email\": \"example@example.com\",\r\n    \"password\": \"password123\",\r\n    \"username\": \"TestUser\",\r\n    \"role\": \"1\",\r\n    \"phone\": \"1234567890\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"pm.collectionVariables.set(\"testuserJWT\", response.accessToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"example@example.com\",\r\n    \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 403 Invalid Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 200\", ()=>{\r",
							"    pm.response.to.have.status(403)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message')\r",
							"    pm.expect(response.message).to.equal(\"Token is not valid\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{testuserJWT}}+1",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/deleteAccount",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"deleteAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 401 No Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 200\", ()=>{\r",
							"    pm.response.to.have.status(401)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message')\r",
							"    pm.expect(response.message).to.equal(\"Auth token is not supplied\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/deleteAccount",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"deleteAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 200 Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 200\", ()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message')\r",
							"    pm.expect(response.message).to.equal(\"User account deleted successfully.\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have account field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('account')\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{testuserJWT}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/deleteAccount",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"deleteAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 400 Invalid ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 200\", ()=>{\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message')\r",
							"    pm.expect(response.message).to.equal(\"The supplied account id from the JWT does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{testuserJWT}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/deleteAccount",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"deleteAccount"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "testuserJWT",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVGVzdCIsInJvbGUiOjEsImlkIjozLCJpYXQiOjE3NDY5MDUwODksImV4cCI6MTc0ODExNDY4OX0.VSZGxE48EXaAoXcjOCCE9YyqD00BlVM3qPhzPaX41Xk",
			"type": "string"
		}
	]
}