{
	"info": {
		"_postman_id": "f6299f99-9296-4fe1-b6aa-0674d6e2d62b",
		"name": "Change Password Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38541945",
		"_collection_link": "https://tcss460-group-9.postman.co/workspace/Messages~2e6ff5c7-e4ec-43f4-a3fc-0a182c39f97e/collection/38541945-f6299f99-9296-4fe1-b6aa-0674d6e2d62b?action=share&source=collection_link&creator=38541945"
	},
	"item": [
		{
			"name": "Create Test User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Test\",\r\n    \"lastname\": \"User\",\r\n    \"email\": \"example@example.com\",\r\n    \"password\": \"password123\",\r\n    \"username\": \"TestUser\",\r\n    \"role\": \"1\",\r\n    \"phone\": \"1234567890\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"example@example.com\",\r\n    \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"password\",\r\n    \"newPassword\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password 200 Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const { oldPassword, newPassword } = {\r",
							"    oldPassword: \"{{oldPassword}}\",\r",
							"    newPassword: \"{{newPassword}}\"\r",
							"};\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 200\", ()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message')\r",
							"    pm.expect(response.message).to.equal(\"Password changed successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"{{oldPassword}}\",\r\n    \"newPassword\": \"{{newPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password 400 Invalid Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const { oldPassword, newPassword } = {\r",
							"    oldPassword: \"{{oldPassword}}\",\r",
							"    newPassword: true\r",
							"};\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", ()=>{\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message');\r",
							"    pm.expect(response.message).to.equal(\"Request body values are not of required type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"{{oldPassword}}\",\r\n    \"newPassword\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password 400 Invalid Length",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const { oldPassword, newPassword } = {\r",
							"    oldPassword: \"{{oldPassword}}\",\r",
							"    newPassword: \"passw\"\r",
							"};\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", ()=>{\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message');\r",
							"    pm.expect(response.message).to.equal(\"Password needs to be 7 or more characters\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"{{oldPassword}}\",\r\n    \"newPassword\": \"pass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password 400 Invalid Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const { oldPassword, newPassword } = {\r",
							"    oldPassword: \"pass\",\r",
							"    newPassword: \"{{newPassword}}\"\r",
							"};\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", ()=>{\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message');\r",
							"    pm.expect(response.message).to.equal(\"The supplied account id from the JWT does not exist or the supplied password does not match\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"pass\",\r\n    \"newPassword\": \"{{newPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password 401 No Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const { oldPassword, newPassword } = {\r",
							"    oldPassword: \"{{oldPassword}}\",\r",
							"    newPassword: \"{{newPassword}}\"\r",
							"};\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 401\", ()=>{\r",
							"    pm.response.to.have.status(401)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message');\r",
							"    pm.expect(response.message).to.equal(\"Auth token is not supplied\");\r",
							"});  "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldpassword\": \"{{oldPassword}}\",\r\n    \"newpassword\": \"{{newPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password 403 Invalid Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const { oldPassword, newPassword } = {\r",
							"    oldPassword: \"{{oldPassword}}\",\r",
							"    newPassword: \"{{newPassword}}\"\r",
							"};\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 403\", ()=>{\r",
							"    pm.response.to.have.status(403)\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have message field\", ()=>{\r",
							"    pm.expect(response).to.haveOwnProperty('message');\r",
							"    pm.expect(response.message).to.equal(\"Token is not valid\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVGVzdCIsInJvbGUiOjEsImlkIjo5LCJpYXQiOjE3NDY0MDM1NDQsImV4cCI6MTc0NzYxMzE0NH0.Risxp5-lIELaSV_vHMGpQwCLBl7jK20455u30ZnTV2Yq34hufq34fhqoruiegw",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldpassword\": \"{{oldPassword}}\",\r\n    \"newpassword\": \"{{newPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{testuserJWT}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "testuserJWT",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVGVzdCIsInJvbGUiOjEsImlkIjo5LCJpYXQiOjE3NDY0MDQ5NjIsImV4cCI6MTc0NzYxNDU2Mn0.hDKfxhWnoNLPz2hZ6HPVS6mYpNhYws1Q1eppuQpNhjk",
			"type": "string"
		},
		{
			"key": "oldPassword",
			"value": "password",
			"type": "string"
		},
		{
			"key": "newPassword",
			"value": "password",
			"type": "string"
		},
		{
			"key": "ACCESS_TOKEN",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVGVzdCIsInJvbGUiOjEsImlkIjo5LCJpYXQiOjE3NDY0MDM1NDQsImV4cCI6MTc0NzYxMzE0NH0.Risxp5-lIELaSV_vHMGpQwCLBl7jK20455u30ZnTV2Y",
			"type": "string"
		}
	]
}